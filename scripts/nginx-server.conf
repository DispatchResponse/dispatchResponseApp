# /etc/nginx/sites-available/default
# Configuration to use nginx as a reverse proxy in front of node.
# Source: http://www.nikola-breznjak.com/blog/javascript/nodejs/using-nginx-as-a-reverse-proxy-in-front-of-your-node-js-application/

server {
    server_name gfd.gr testing.gfd.gr gfd.dispatch.rustybear.com;

    location / {
        proxy_pass http://127.0.0.1:1337;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

 # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/gfd.gr/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/gfd.gr/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    if ($host = gfd.dispatch.rustybear.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    if ($host = testing.gfd.gr) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    if ($host = gfd.gr) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    server_name gfd.gr testing.gfd.gr gfd.dispatch.rustybear.com;
    listen 80;
    return 404; # managed by Certbot
}
